// -> Want to re-use variable name so which variable mathod should i use

//  we use var method to re-use variable name --------------------------------------------------------------------------------

// -> give the list which variavble name not works in js
// 1. let a=0
// 2. let "a"=0
// 3. let 'a'=0
// 4. let `10`=0
// 5. let 1=0
// --------------------------------------------------------------------------------
// The Followng Declaration of Variable is not working
//2) let "a"=0,'a'=0,`10`=0 1=0 --------------------------------------------------------------------------------

// let x = 100
// var y = 100
// const z = 100
// const m error
// {
//       x= 90 
//       y= 90 
//       z= 90 
//       console.log(x) ___________________ point-x1
//       console.log(y) ___________________ point-y1
//       console.log(z) ___________________ point-z1
// } 

// console.log(x) ___________________ point-x2
// console.log(y) ___________________ point-y2
// console.log(z) ___________________ point-z2

// what will print at x1- _______ 90
// what will print at y1- _______90
// what will print at z1- _______due to const it throw error
// what will print at x2-_______ 90 due to re assign the value 
// what will print at y2-_______90
// what will print at z2-_______100
// --------------------------------------------------------------------------------

// -> task-2

// console.log(x) ___________________ point-x2
// console.log(y) ___________________ point-y2
// console.log(z) ___________________ point-z2

// {
//       let x = 100
//       var y = 100
//       const z = 100
// }

// console.log(x) ___________________ point-x1
// console.log(y) ___________________ point-y1
// console.log(z) ___________________ point-z1


// what will print at x1-_______ assining error undefind not defind
// what will print at y1-_______ assining error undefind
// what will print at z1-_______ assining error undefind
// what will print at x2-_______undefine
// what will print at y2-_______undefine
// what will print at z2-_______undefine

// --------------------------------------------------------------------------------

